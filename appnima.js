/* appnima v0.12.31 - 2013/12/31
   http://appnima.com
   Copyright (c) 2013  - Licensed  */
(function(){var Appnima,_ref,_ref1,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}},__hasProp={}.hasOwnProperty,__extends=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)__hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child};window.Appnima=Appnima={},Appnima.version="0.12.31",Appnima.key=null,Appnima.token=null,Appnima.production=!0,Appnima.Dom="undefined"!=typeof $$&&null!==$$?$$:$,Appnima.onError=null,Appnima.connect=function(type,url,parameters,token){var error,headers,promise,_this=this;null==token&&(token=!1),headers={},token&&null!=Appnima.key&&(headers={Authorization:"basic "+Appnima.key}),!token&&Appnima.key&&(headers={Authorization:"bearer "+Appnima.token}),promise=new Hope.Promise;try{this.Dom.ajax({url:url,type:type,headers:headers,data:parameters,dataType:"json",contentType:"application/x-www-form-urlencoded",success:function(response){return response?promise.done(null,response):promise.done("Unknown error",null)},error:function(type,xhr){var error,response;return"string"!=typeof type&&(xhr=type),response=null!=xhr.response?xhr.response:xhr.responseText,error={code:xhr.status,type:xhr.statusText,message:JSON.parse(response).message},promise.done(error,null),null!=Appnima.onError?Appnima.onError.call(_this,error):void 0}})}catch(_error){error=_error,promise.done(error,null)}return promise},Appnima.Instance=function(app){var INSTANCES,get;return INSTANCES={DEV:{user:"http://localhost:1337/",messenger:"http://localhost:1337/messenger/",location:"http://localhost:1337/location/",storage:"http://localhost:1337/storage/",socket:"http://localhost:3000/socket/",rtc:"http://localhost:3001/rtc/",push:"http://localhost:1337/"},PRO:{user:"http://api.appnima.com/",messenger:"http://api.appnima.com/messenger/",location:"http://api.appnima.com/location/",storage:"http://api.appnima.com/storage/",socket:"http://api.appnima.com:1337/",rtc:"http://api.appnima.com:1337/rtc/",push:"http://api.appnima.com/"}},get=function(name){return INSTANCES[app.production?"PRO":"DEV"][name]},{get:get}}(Appnima),Appnima.Location=function(app){var add,checkin,checkins,friends,people,place,places,user,_find,_url;return places=function(latitude,longitude,precision,meters,type){var parameters;return null==meters&&(meters=5e3),null==type&&(type=null),parameters={latitude:latitude,longitude:longitude},null!=precision&&(parameters.precision=precision),null==precision&&(parameters.radius=meters),app.connect("GET",""+_url()+"places",parameters)},place=function(id,reference){var parameters;return parameters={id:id},null!=reference&&(parameters.reference=reference),app.connect("GET",""+_url()+"place",parameters)},add=function(name,address,locality,postal_code,country,latitude,longitude,mail,phone,website){var parameters;return parameters={name:name,address:address,locality:locality,postal_code:postal_code,country:country,latitude:latitude,longitude:longitude},null!=mail&&(parameters.mail=mail),null!=phone&&(parameters.phone=phone),null!=website&&(parameters.website=website),app.connect("POST",""+_url()+"place",parameters)},checkin=function(id){return app.connect("POST",""+_url()+"checkin",{id:id})},checkins=function(user){return app.connect("GET",""+_url()+"checkin",{user:user})},friends=function(latitude,longitude,meters){return null==meters&&(meters=5e3),_find("friends",latitude,longitude,meters)},people=function(latitude,longitude,meters){return null==meters&&(meters=5e3),_find("people",latitude,longitude,meters)},user=function(latitude,longitude){var parameters;return parameters={latitude:null!=latitude?latitude:void 0,longitude:null!=longitude?longitude:void 0},null!=parameters.latitude&&null!=parameters.longitude?app.connect("POST",""+_url()+"user",parameters):app.connect("GET",""+_url()+"user")},_find=function(method,latitude,longitude,meters){var parameters;return null==meters&&(meters=5e3),parameters={latitude:latitude,longitude:longitude,radius:meters},app.connect("GET",""+_url()+method,parameters)},_url=function(){return app.Instance.get("location")},{places:places,place:place,add:add,checkin:checkin,checkins:checkins,people:people,friends:friends,user:user}}(Appnima),Appnima.Messenger=function(app){var SMS,addComment,deleteComment,deleteMessage,mail,message,messageInbox,messageOutbox,post,postComments,readMessage,_messageState,_url;return mail=function(user,subject,message){var parameters;return parameters={user:user,subject:subject,message:message},app.connect("POST",""+_url()+"mail",parameters)},message=function(user,message,subject){var parameters;return parameters={user:user,message:message,subject:subject},app.connect("POST",""+_url()+"message",parameters)},SMS=function(user,message){var parameters;return parameters={user:user,message:message},app.connect("POST",""+_url()+"sms",parameters)},messageInbox=function(){return app.connect("GET",""+_url()+"message/inbox",{})},messageOutbox=function(){return app.connect("GET",""+_url()+"message/outbox",{})},readMessage=function(message){return _messageState(message,"READ")},deleteMessage=function(message){return _messageState(message,"DELETED")},post=function(parameters){return null!=parameters.id?app.connect("PUT",""+_url()+"post",parameters):app.connect("POST",""+_url()+"post",parameters)},postComments=function(id){return null!=id?app.connect("GET",""+_url()+"post/comment",{id:id}):void 0},addComment=function(post_id,content){return null!=post_id&&null!=content?app.connect("POST",""+_url()+"comment",{id:post_id,content:content}):void 0},deleteComment=function(id){return null!=id?app.connect("DELETE",""+_url()+"comment",{id:id}):void 0},_messageState=function(message,state){var parameters;return parameters={message:message,state:state},app.connect("PUT",""+_url()+"message",parameters)},_url=function(){return app.Instance.get("messenger")},{mail:mail,SMS:SMS,message:message,readMessage:readMessage,deleteMessage:deleteMessage,messageInbox:messageInbox,messageOutbox:messageOutbox,post:post,postComments:postComments,addComment:addComment,deleteComment:deleteComment}}(Appnima),Appnima.Network=function(app){var check,follow,followers,following,info,search,unfollow,_errorParameters,_relationship,_url;return info=function(user_id){var parameters;return parameters=user_id?{user:user_id}:null,app.connect("GET",""+_url()+"network/info",parameters)},following=function(user_id,page,num_results){var parameters;return null==page&&(page=null),null==num_results&&(num_results=null),parameters={user:user_id,page:page,num_results:num_results},app.connect("GET",""+_url()+"network/following",parameters)},followers=function(user_id,page,num_results){var parameters;return null==page&&(page=null),null==num_results&&(num_results=null),parameters={user:user_id,page:page,num_results:num_results},app.connect("GET",""+_url()+"network/followers",parameters)},follow=function(user_id){return _relationship("POST","follow",user_id)},check=function(user_id){return _relationship("GET","check",user_id)},unfollow=function(user_id){return _relationship("POST","unfollow",user_id)},search=function(query){return app.connect("GET",""+_url()+"network/search",{query:query})},_relationship=function(type,method,user_id){var promise;return promise=new Hope.Promise,user_id?app.connect(type,""+_url()+"network/"+method,{user:user_id}).then(function(error,result){return promise.done(error,result)}):promise.done({code:1,message:"Insuficient parameters",type:"Client"},null),promise},_errorParameters=function(){return this},_url=function(){return app.Instance.get("user")},{info:info,following:following,followers:followers,check:check,follow:follow,unfollow:unfollow,search:search}}(Appnima),Appnima.Push=function(app){var received,send,_url;return send=function(user,alert,content){var parameters;return parameters={user:user,alert:alert,content:JSON.stringify(content)},app.connect("POST",""+_url()+"push",parameters)},received=function(){return this},_url=function(){return app.Instance.get("push")},{send:send,received:received}}(Appnima),Appnima.Socket=function(){function Socket(id,type){var _this=this;null==type&&(type=null),this.onMessage=__bind(this.onMessage,this),this.onError=__bind(this.onError,this),this.onDisallow=__bind(this.onDisallow,this),this.onConnect=__bind(this.onConnect,this),this.send=__bind(this.send,this),this.disallowUsers=__bind(this.disallowUsers,this),this.allowUsers=__bind(this.allowUsers,this),this.disconnect=__bind(this.disconnect,this),this.connect=__bind(this.connect,this),this.create=__bind(this.create,this),this.socket=io.connect(_url(),{"force new connection":!0}),null!=id&&this.connect(id,type),this.socket.on("connect",function(){return _this.connected=!0})}var _url;return Socket.prototype.create=function(id,type,persistent,name,allowedUsers){var _this=this;return null==persistent&&(persistent=!0),null==name&&(name=""),null==allowedUsers&&(allowedUsers=[]),this.connected?this.socket.emit("open",Appnima.token,id,name,type,persistent,allowedUsers):this.socket.on("connect",function(){return _this.connected=!0,_this.socket.emit("open",Appnima.token,id,name,type,persistent,allowedUsers)})},Socket.prototype.connect=function(id,type){var _this=this;return null==type&&(type=null),this.connected?this.socket.emit("join",Appnima.token,id,type):(this.connected=!0,this.socket.on("connect",function(){return _this.socket.emit("join",Appnima.token,id,type)}))},Socket.prototype.disconnect=function(){return this.socket.emit("leave"),this.socket.removeAllListeners()},Socket.prototype.allowUsers=function(users){return null==users&&(users=[]),this.socket.emit("allowUsers",users)},Socket.prototype.disallowUsers=function(users){return null==users&&(users=[]),this.socket.emit("disallowUsers",users)},Socket.prototype.send=function(message,optionalData){return null==optionalData&&(optionalData={}),this.socket.emit("sendMessage",{content:message,data:optionalData})},Socket.prototype.broadcast=function(message,optionalData){return null==optionalData&&(optionalData={}),this.socket.emit("sendBroadcast",{content:message,data:optionalData})},Socket.prototype.onConnect=function(callback){return this.socket.on("onConnection",function(message){return callback(message)})},Socket.prototype.onDisallow=function(callback){return this.socket.on("onDisallowUsers",function(users){return callback(users)})},Socket.prototype.onError=function(callback){var _this=this;return this.socket.on("onError",function(message){return-1!==message.indexOf("[CONNECTION ERROR]")&&_this.disconnect(),callback(message)})},Socket.prototype.onMessage=function(callback){return this.socket.on("onMessage",function(message){return callback(message)})},Socket.prototype.api=function(type,method,parameters){return Appnima.connect(type,""+Appnima.Instance.get("user")+method,parameters)},Socket.prototype.messages=function(){return this},_url=function(){return Appnima.Instance.get("socket")},Socket}(),Appnima.Socket.Group=function(_super){function Group(){return _ref=Group.__super__.constructor.apply(this,arguments)}return __extends(Group,_super),Group.prototype.create=function(name,users,persistent){return null==users&&(users=[]),null==persistent&&(persistent=!0),Group.__super__.create.call(this,null,"private",persistent,name,users)},Group.prototype.list=function(){return this.api("GET","socket/room")},Group.prototype.remove=function(id){return this.api("DELETE","socket/room",{id:id})},Group.prototype.rename=function(id,name){return this.api("PUT","socket/room",{id:id,name:name})},Group.prototype.deleteUnreadCount=function(room){return this.api("DELETE","socket/message/unread",{room:room})},Group.prototype.messages=function(room,page){return this.api("GET","socket/message",{room:room,page:page})},Group}(Appnima.Socket),Appnima.Socket.Chat=function(_super){function Chat(){return _ref1=Chat.__super__.constructor.apply(this,arguments)}return __extends(Chat,_super),Chat.prototype.create=function(name,users){return null==users&&(users=[]),Chat.__super__.create.call(this,name,users,!1)},Chat}(Appnima.Socket.Group),Appnima.Socket.Emiter=function(_super){function Emiter(id){Emiter.__super__.constructor.call(this,null),this.create(id,"public",!1,id)}return __extends(Emiter,_super),Emiter}(Appnima.Socket),Appnima.Socket.Listener=function(_super){function Listener(id){Listener.__super__.constructor.call(this,id,"public")}return __extends(Listener,_super),Listener}(Appnima.Socket),Appnima.Socket.Application=function(_super){function Application(){Application.__super__.constructor.call(this,null),this.connect(null)}return __extends(Application,_super),Application}(Appnima.Socket),Appnima.Socket.Inbox=function(_super){function Inbox(){Inbox.__super__.constructor.call(this,null),this.create(null,"inbox",!1)}return __extends(Inbox,_super),Inbox.prototype.unreadCounts=function(){return this.api("GET","socket/message/unread")},Inbox.prototype.onlineUsers=function(callback){return null!=callback&&this.socket.on("onOnlineUsers",function(users){return callback(users)}),this.socket.emit("onlineUsers",Appnima.token)},Inbox.prototype.friendConnection=function(callback){return this.socket.on("friendConnected",function(user){return callback(user)})},Inbox.prototype.friendDisconnection=function(callback){return this.socket.on("friendDisconnected",function(user){return callback(user)})},Inbox.prototype.sendToFollowers=function(data){return this.socket.emit("sendToFollowers",Appnima.token,data)},Inbox.prototype.sendToFriends=function(data){return this.socket.emit("sendToFriends",Appnima.token,data)},Inbox.prototype.sendToUser=function(id,data){return this.socket.emit("sendToUser",Appnima.token,id,data)},Inbox}(Appnima.Socket),Appnima.Socket.User=function(_super){function User(){User.__super__.constructor.apply(this,arguments)}return __extends(User,_super),User}(Appnima.Socket),Appnima.Storage=function(app){var container,createFolder,deleteFile,rename,_url;return createFolder=function(name,url){var parameters;return parameters={name:name,url:url},app.connect("POST",""+_url()+"folder",parameters)},container=function(){return app.connect("GET",""+_url()+"files")},rename=function(id,name){var parameters;return parameters={id:id,name:name},app.connect("PUT",""+_url()+"file",parameters)},deleteFile=function(file){return app.connect("DELETE",""+_url()+"file",{id:file})},_url=function(){return app.Instance.get("storage")},{createFolder:createFolder,container:container,deleteFile:deleteFile,rename:rename}}(Appnima),Appnima.User=function(app){var avatar,info,login,logout,password,session,signup,subscribe,terminal,ticket,token,update,_credentials,_storage,_url;return signup=function(mail,password,username){var parameters,promise;return promise=new Hope.Promise,parameters={password:password,username:null!=username?username:mail},null!=mail&&(parameters.mail=mail),Hope.chain([function(){return app.connect("POST",""+_url()+"user/signup",parameters,token)},function(error,profile){var storage;return storage=_storage(profile),parameters.grant_type="password",app.connect("POST",""+_url()+"oauth2/token",parameters,!0)}]).then(function(error,token){return _credentials(promise,error,token)}),promise},token=function(){var parameters,promise,storage;return promise=new Hope.Promise,storage=_storage(),parameters={refresh_token:storage.refresh_token,grant_type:"refresh_token"},app.connect("POST",""+_url()+"oauth2/token",parameters,!0).then(function(error,token){return _credentials(promise,error,token)}),promise},session=function(){var storage;return storage=JSON.parse(localStorage.getItem(app.key)),storage&&(Appnima.token=storage.access_token,app.connect("GET",""+_url()+"user/info").then(function(error,result){return _storage(result)})),storage},login=function(mail,password,username){var parameters,promise;return promise=new Hope.Promise,parameters={password:password,username:null!=username?username:null},null!=mail&&(parameters.mail=mail),app.connect("POST",""+_url()+"user/login",parameters,!0).then(function(error,profile){return _credentials(promise,error,profile)}),promise},logout=function(){var promise;return promise=new Hope.Promise,setTimeout(function(){return localStorage.removeItem(app.key),promise.done(null,{status:"ok"})},300),promise},info=function(user){return null==user&&(user=null),user?app.connect("GET",""+_url()+"user/info",{user:user}):app.connect("GET",""+_url()+"user/info")},update=function(data){return app.connect("PUT",""+_url()+"user/info",data)},avatar=function(data){return app.connect("POST",""+_url()+"user/avatar",{avatar:data},!1)},password=function(old_password,new_password){var parameters;return parameters={old_password:old_password,new_password:new_password},app.connect("POST",""+_url()+"user/password",parameters,!1)},terminal=function(os,type,token,version){var method,parameters;return method="GET",parameters={},null!=os&&(method="POST",parameters={os:os,token:token,type:type,version:version}),app.connect(method,""+_url()+"user/terminal",parameters)},subscribe=function(mail){return app.connect("POST",""+_url()+"user/subscription",{mail:mail},!0)},ticket=function(type,question){var parameters;return parameters={type:type,question:question},app.connect("POST",""+_url()+"user/ticket",parameters)},_url=function(){return app.Instance.get("user")},_credentials=function(promise,error,result){return error?promise.done(error,null):promise.done(null,_storage(result))},_storage=function(extend){var attribute,storage;if(storage=JSON.parse(localStorage.getItem(app.key))||{},extend){for(attribute in extend)storage[attribute]=extend[attribute];localStorage.setItem(app.key,JSON.stringify(storage)),null!=storage.access_token&&(Appnima.token=storage.access_token)}return storage},{signup:signup,token:token,login:login,logout:logout,session:session,info:info,update:update,avatar:avatar,password:password,terminal:terminal,subscribe:subscribe,ticket:ticket}}(Appnima),Appnima.Rtc=function(){var CHUNK_LENGTH,ICE_SERVERS,IceCandidate,OPTIONS,PeerConnection,SessionDescription;return ICE_SERVERS=function(){return{iceServers:[{url:"stun:stun.l.google.com:19302"}]}},OPTIONS=function(){return{optional:[{RtpDataChannels:!0}]}},CHUNK_LENGTH=function(){return 1e3},PeerConnection=function(){var peer_connection,_ref2;return new(peer_connection=null!=(_ref2=window.mozRTCPeerConnection)?_ref2:window.webkitRTCPeerConnection)(ICE_SERVERS(),OPTIONS())},SessionDescription=function(remote){var session_description;return new(session_description="undefined"!=typeof RTCSessionDescription&&null!==RTCSessionDescription?RTCSessionDescription:mozRTCSessionDescription)(remote)},IceCandidate=function(candidate){var ice_candidate,_ref2;return new(ice_candidate=null!=(_ref2=window.mozRTCIceCandidate)?_ref2:window.RTCIceCandidate)(candidate)},{ICE_SERVERS:ICE_SERVERS,OPTIONS:OPTIONS,CHUNK_LENGTH:CHUNK_LENGTH,PeerConnection:PeerConnection,SessionDescription:SessionDescription,IceCandidate:IceCandidate}}(Appnima),Appnima.Peer=function(){function Peer(){this.onReceiveAnswer=__bind(this.onReceiveAnswer,this),this.onStatusChange=__bind(this.onStatusChange,this),this.onReceiveOffer=__bind(this.onReceiveOffer,this),this.onFriendDisconnect=__bind(this.onFriendDisconnect,this),this.onNewFollower=__bind(this.onNewFollower,this),this.onNewFriendAdded=__bind(this.onNewFriendAdded,this),this.onNewFriend=__bind(this.onNewFriend,this),this.followersList=__bind(this.followersList,this),this.friendsList=__bind(this.friendsList,this),this.onReceiveIceCandidate=__bind(this.onReceiveIceCandidate,this),this.onNewIceCandidate=__bind(this.onNewIceCandidate,this),this._sendChunckedFile=__bind(this._sendChunckedFile,this);var _this=this;Appnima.Signaling=io.connect(Appnima.Instance.get("rtc")),this.connected=!1,this.connected_user_id=null,this.callbacks={},this.pc=Appnima.Rtc.PeerConnection(),this.pc.onicecandidate=this.onNewIceCandidate,Appnima.Signaling.on("friends",this.friendsList),Appnima.Signaling.on("followers",this.followersList),Appnima.Signaling.on("newFollower",this.onNewFollower),Appnima.Signaling.on("newFriendAdded",this.onNewFriendAdded),Appnima.Signaling.on("newFriend",this.onNewFriend),Appnima.Signaling.on("offer",this.onReceiveOffer),Appnima.Signaling.on("answer",this.onReceiveAnswer),Appnima.Signaling.on("disconnected",this.onFriendDisconnect),Appnima.Signaling.on("ice",this.onReceiveIceCandidate),Appnima.Signaling.on("connect",function(users){return _this.connected=!0,users=null!=users?JSON.parse(users):[],_this.trigger("connect",users)}),Appnima.Signaling.on("connected",function(user){return user=JSON.parse(user),user.available=!0,user.connected=!0,_this.trigger("connected",user)}),Appnima.Signaling.on("statusChange",this.onStatusChange),Appnima.Signaling.on("onError",function(error){return console.error("[ERROR] :: ",error)}),Appnima.Signaling.emit("connect",Appnima.token)}var saveToDisk,_randomId;return Peer.prototype.addMedia=function(media){var _this=this;return this.media=media,this.pc.addStream(this.media),this.pc.onaddstream=function(event){return _this.trigger("remoteStream",event.stream)}},Peer.prototype.createChannel=function(){var _this=this;return this.fileChunks={},this.channel=this.pc.createDataChannel("RTCDataChannel",{reliable:!0}),this.channel.onmessage=function(event){var data;return data=JSON.parse(event.data),"object"===data.type&&_this.trigger("data",data.message),"file"===data.type&&(_this.fileChunks[data.uid]||(_this.fileChunks[data.uid]=[]),_this.fileChunks[data.uid].push(data.message),data.last)?(saveToDisk(_this.fileChunks[data.uid].join(""),data.name),delete _this.fileChunks[data.uid]):void 0}},Peer.prototype.offer=function(userId,onlyAudio,onlyText){var channels,options,_this=this;return null==onlyAudio&&(onlyAudio=!1),null==onlyText&&(onlyText=!1),this.offerer=!0,channels=onlyText===!0?{OfferToReceiveAudio:!1,OfferToReceiveVideo:!1}:onlyAudio===!0?{OfferToReceiveAudio:!0,OfferToReceiveVideo:!1}:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0},options={optional:[],mandatory:channels},this.pc.createOffer(function(description){var token;return _this.pc.setLocalDescription(description),token=Appnima.token,Appnima.Signaling.emit("offer",Appnima.token,userId,JSON.stringify(description))},null,options)},Peer.prototype.accept=function(userId,remoteDescription,onlyAudio,onlyText){var channels,options,_this=this;return null==onlyAudio&&(onlyAudio=!1),null==onlyText&&(onlyText=!1),this.offerer=!1,channels=onlyText===!0?{OfferToReceiveAudio:!1,OfferToReceiveVideo:!1}:onlyAudio===!0?{OfferToReceiveAudio:!0,OfferToReceiveVideo:!1}:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0},options={optional:[],mandatory:channels},this.pc.setRemoteDescription(Appnima.Rtc.SessionDescription(remoteDescription)),this.pc.createAnswer(function(description){return _this.pc.setLocalDescription(description),Appnima.Signaling.emit("answer",Appnima.token,userId,JSON.stringify(description))},null,options)},Peer.prototype.send=function(data){return this.channel?this.channel.send(JSON.stringify({type:"object",message:data})):(console.error("Channel not created yet..."),console.debug("use <PeerName>.createChannel() before this call"))},Peer.prototype.sendFile=function(file){var reader,uid,_this=this;return file?(reader=new FileReader,uid=_randomId(),reader.onload=function(event){return _this._sendChunckedFile(event,file.name,uid)},reader.readAsDataURL(file)):console.error("Not file provided")},Peer.prototype.closeConnection=function(userId,firstClosing,stream){var description;return null==userId&&(userId=null),null==firstClosing&&(firstClosing=!1),null==stream&&(stream=null),firstClosing===!0&&(description={type:"answer",message:"closed",sdp:null},Appnima.Signaling.emit("answer",Appnima.token,userId,JSON.stringify(description))),null!=stream&&stream.stop(),this.pc.close(),this.pc=Appnima.Rtc.PeerConnection(),this.pc.onicecandidate=this.onNewIceCandidate,this.createChannel()},Peer.prototype.refreshFriends=function(){return Appnima.Signaling.emit("friends",Appnima.token)},Peer.prototype.refreshFollowers=function(){return Appnima.Signaling.emit("followers",Appnima.token)},Peer.prototype.addFriend=function(friend_id){return Appnima.Signaling.emit("addFriend",Appnima.token,friend_id)},Peer.prototype.newFollower=function(following_user_id){return Appnima.Signaling.emit("newFollower",Appnima.token,following_user_id)},Peer.prototype.statusChange=function(status){return Appnima.Signaling.emit("statusChange",status)},Peer.prototype._sendChunckedFile=function(event,name,uid,text){var data,remainingDataURL,_this=this;return text||(text=event.target.result),data={type:"file",name:name,uid:uid},text.length>Appnima.Rtc.CHUNK_LENGTH()?data.message=text.slice(0,Appnima.Rtc.CHUNK_LENGTH()):(data.message=text,data.last=!0),this.channel.send(JSON.stringify(data)),remainingDataURL=text.slice(data.message.length),remainingDataURL.length?setTimeout(function(){return _this._sendChunckedFile(null,name,uid,remainingDataURL)},500):void 0},saveToDisk=function(fileUrl,fileName){var evt,save;return save=document.createElement("a"),save.href=fileUrl,save.target="_blank",save.download=fileName||fileUrl,evt=document.createEvent("MouseEvents"),evt.initMouseEvent("click",!0,!0,window,1,0,0,0,0,!1,!1,!1,!1,0,null),save.dispatchEvent(evt),(window.URL||window.webkitURL).revokeObjectURL(save.href)},Peer.prototype.onNewIceCandidate=function(ice){return ice.candidate&&!this.offerer?(this.pc.addIceCandidate(Appnima.Rtc.IceCandidate(ice.candidate)),Appnima.Signaling.emit("ice",Appnima.token,this.connected_user_id,ice)):void 0},Peer.prototype.onReceiveIceCandidate=function(ice){return this.offerer&&ice.candidate?this.pc.addIceCandidate(Appnima.Rtc.IceCandidate(ice.candidate)):void 0},Peer.prototype.friendsList=function(data){return data=JSON.parse(data),this.trigger("friends",data)},Peer.prototype.followersList=function(data){return data=JSON.parse(data),this.trigger("followers",data)},Peer.prototype.onNewFriend=function(data,connected,available){return data=JSON.parse(data),data.connected=connected,data.available=available,this.trigger("newFriend",data)},Peer.prototype.onNewFriendAdded=function(data){return data=JSON.parse(data),this.trigger("newFriendAdded",data)},Peer.prototype.onNewFollower=function(data){return data=JSON.parse(data),this.trigger("newFollower",data)},Peer.prototype.onFriendDisconnect=function(data){var user;return user=JSON.parse(data),this.trigger("disconnected",user)},Peer.prototype.onReceiveOffer=function(data){return data=JSON.parse(data),this.connected_user_id=data.user._id,this.trigger("offer",data)},Peer.prototype.onStatusChange=function(data,status){return data=JSON.parse(data),data.available=status,this.trigger("statusChange",data)},Peer.prototype.onReceiveAnswer=function(data){return data=JSON.parse(data),this.pc.setRemoteDescription(Appnima.Rtc.SessionDescription(data.description)),this.trigger("answer",data)},Peer.prototype.on=function(event,callback){return this.callbacks[event]=callback},Peer.prototype.trigger=function(event,data){return this.callbacks[event]?this.callbacks[event].call(this.callbacks[event],data):void 0},_randomId=function(length){var i,possible,text,_i;for(null==length&&(length=20),text="",possible="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",i=_i=0;length>=0?length>=_i:_i>=length;i=length>=0?++_i:--_i)text+=possible.charAt(Math.floor(Math.random()*possible.length));return text},Peer}()}).call(this);